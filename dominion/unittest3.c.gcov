        -:    0:Source:unittest3.c
        -:    0:Graph:unittest3.gcno
        -:    0:Data:unittest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <assert.h>
        -:    4:#include "dominion.h"
        -:    5:#include "dominion_helpers.h"
        -:    6:#include "rngs.h"
        -:    7:
        -:    8:
        -:    9:#define DEBUG 0
        -:   10:#define NOISY_TEST 1
        -:   11:
function main called 1 returned 100% blocks executed 73%
        1:   12:int main(){
        1:   13:	int FailCheck = 0;
        1:   14:	int a[] = {9,8,7,6,5,4,3,2,1,0};
        -:   15:	int n;
        1:   16:	int numErrors = 0;
        1:   17:	int* listOfKingdomCards = kingdomCards(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);
call    0 returned 100%
       11:   18:	for(n = 0; n <10; n++){
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
       10:   19:		if(listOfKingdomCards[n] != a[n]){
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   20:			printf("Kingdomcard: %d produced an error\n",n );
call    0 never executed
    #####:   21:			FailCheck = 1;
    #####:   22:			numErrors++;
        -:   23:		}
        -:   24:	}
        -:   25:
        -:   26:
        1:   27:	if(FailCheck == 0){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   28:		printf("No errors found in Kingdomcards function\n");
call    0 returned 100%
        -:   29:	}
        -:   30:	else
    #####:   31:		printf("Number of errors found: %d \n",numErrors);
call    0 never executed
        -:   32:
        -:   33:
        -:   34:
        1:   35:	return 0;
        -:   36:	
        -:   37:}